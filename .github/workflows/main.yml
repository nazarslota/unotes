name: CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  DIGITALOCEAN_REGISTRY: registry.digitalocean.com/unotes
  AUTH_SERVICE_IMAGE_NAME: unotes-auth
  AUTH_SERVICE_CONTAINER_NAME: unotes-auth

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout master
        uses: actions/checkout@v3

      - name: Build auth service image
        working-directory: auth
        run: |
          docker build -t $(echo $DIGITALOCEAN_REGISTRY)/$(echo $AUTH_SERVICE_IMAGE_NAME):$(echo $GITHUB_SHA | head -c7) .

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry
        run: doctl registry login --expiry-seconds 600

      - name: Push auth service image to DigitalOcean Container Registry
        run: docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)

  deploy:
    runs-on: ubuntu-latest
    needs: [ build ]

    steps:
      - name: Deploy auth service to DigitalOcean
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.DIGITALOCEAN_AUTH_SERVICE_HOST }}
          username: ${{ secrets.DIGITALOCEAN_AUTH_SERVICE_USERNAME }}
          key: ${{ secrets.DIGITALOCEAN_AUTH_SERVICE_SSHKEY }}
          script: |
            docker login -u ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} -p ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} $(echo $REGISTRY)
            
            export POSTGRESQL_HOST=${{ secrets.AUTH_SERVICE_POSTGRESQL_HOST }}
            export POSTGRESQL_PORT=${{ secrets.AUTH_SERVICE_POSTGRESQL_PORT }}
            export POSTGRESQL_USERNAME=${{ secrets.AUTH_SERVICE_POSTGRESQL_USERNAME }}
            export POSTGRESQL_PASSWORD=${{ secrets.AUTH_SERVICE_POSTGRESQL_PASSWORD }}
            export POSTGRESQL_DBNAME=${{ secrets.AUTH_SERVICE_POSTGRESQL_DBNAME }}
            export POSTGRESQL_SSLMODE=${{ secrets.AUTH_SERVICE_POSTGRESQL_SSLMODE }}
            
            export REDIS_ADDR=${{ AUTH_SERVICE_REDIS_ADDR }}
            export REDIS_PASSWORD=${{ AUTH_SERVICE_REDIS_PASSWORD }}
            export REDIS_DB=${{ AUTH_SERVICE_REDIS_DB }}
            
            docker stop $(echo $AUTH_SERVICE_CONTAINER_NAME)
            docker rm $(echo $AUTH_SERVICE_CONTAINER_NAME)
            
            docker run \
            -e POSTGRESQL_HOST \
            -e POSTGRESQL_PORT \
            -e POSTGRESQL_USERNAME \
            -e POSTGRESQL_PASSWORD \
            -e POSTGRESQL_DBNAME \
            -e POSTGRESQL_SSLMODE \
            -e REDIS_ADDR \
            -e REDIS_PASSWORD \
            -e REDIS_DB \
            -d \
            --restart always \
            --publish 80:8081 \
            --name $(echo $CONTAINER_NAME) \
            $(echo $DIGITALOCEAN_REGISTRY)/$(echo $AUTH_SERVICE_IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)
